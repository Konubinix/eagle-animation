name: Eagle Animation - Build & package

on:
  push:
    branches:
      - 'master'
      - 'dev'

jobs:
  release:
    name: Build & package
    runs-on: ${{ matrix.versions.os }}

    strategy:
      matrix:
        versions: [
          {os: "ubuntu-latest", name: "Web", type: "web" },
          {os: "ubuntu-latest", name: "Linux", type: "app" },
          {os: "windows-latest", name: "Windows", type: "app" },
          {os: "macos-latest", name: "MacOS", type: "app" }
        ]

    steps:
      - name: Clone source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 20

      # Replace by npm ci when it will be fixed
      - name: Install dependencies
        run: |
          rm package-lock.json
          npm i --force

      - name: Packaging Windows
        if: ${{ (matrix.versions.os == 'windows-latest') && (matrix.versions.type == 'app') }}
        run: npm run build:win
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Packaging MacOS
        if: ${{ (matrix.versions.os == 'macos-latest') && (matrix.versions.type == 'app') }}
        run: npm run build:mac
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Packaging Linux
        if: ${{ (matrix.versions.os == 'ubuntu-latest') && (matrix.versions.type == 'app') }}
        run: npm run build:linux
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Packaging Web
        if: ${{ (matrix.versions.os == 'ubuntu-latest') && (matrix.versions.type == 'web') }}
        run: |
          echo "VITE_PUBLIC_URL=${{ secrets.RUN_PUBLIC_URL }}" >> .env
          echo "VITE_COMMIT_HASH=`git rev-parse HEAD`" >> .env
          npm run build:web
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
